{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOaISJ0rR8Veo9R6gXRWoaC"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["Credit_Card_Customers Prediction"],"metadata":{"id":"UVMJmDjHq6Vf"}},{"cell_type":"markdown","source":["Importing libraries"],"metadata":{"id":"Qrql43WhOa99"}},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","import warnings\n","warnings.filterwarnings('ignore')\n"],"metadata":{"id":"-YhFdmPcr13r","executionInfo":{"status":"ok","timestamp":1738822898531,"user_tz":-330,"elapsed":1885,"user":{"displayName":"Chandan Kumar","userId":"11565150763274034324"}}},"execution_count":2,"outputs":[]},{"cell_type":"markdown","source":["Import DataSet"],"metadata":{"id":"X29Vuh7y-Cvs"}},{"cell_type":"code","source":["df = pd.read_csv(\"/content/credit card prediction.csv\")"],"metadata":{"id":"fjFAhU_a-J1Z","executionInfo":{"status":"ok","timestamp":1738823923224,"user_tz":-330,"elapsed":545,"user":{"displayName":"Chandan Kumar","userId":"11565150763274034324"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["df.head(\n","\n",")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":342},"id":"oxuDWxB4-6KY","executionInfo":{"status":"ok","timestamp":1738823951552,"user_tz":-330,"elapsed":391,"user":{"displayName":"Chandan Kumar","userId":"11565150763274034324"}},"outputId":"6b685f9b-0cf6-4a88-ae0b-4d23ebf22d11"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   CLIENTNUM     Attrition_Flag  Customer_Age Gender  Dependent_count  \\\n","0  768805383  Existing Customer            45      M                3   \n","1  818770008  Existing Customer            49      F                5   \n","2  713982108  Existing Customer            51      M                3   \n","3  769911858  Existing Customer            40      F                4   \n","4  709106358  Existing Customer            40      M                3   \n","\n","  Education_Level Marital_Status Income_Category Card_Category  \\\n","0     High School        Married     $60K - $80K          Blue   \n","1        Graduate         Single  Less than $40K          Blue   \n","2        Graduate        Married    $80K - $120K          Blue   \n","3     High School        Unknown  Less than $40K          Blue   \n","4      Uneducated        Married     $60K - $80K          Blue   \n","\n","   Months_on_book  ...  Credit_Limit  Total_Revolving_Bal  Avg_Open_To_Buy  \\\n","0              39  ...       12691.0                  777          11914.0   \n","1              44  ...        8256.0                  864           7392.0   \n","2              36  ...        3418.0                    0           3418.0   \n","3              34  ...        3313.0                 2517            796.0   \n","4              21  ...        4716.0                    0           4716.0   \n","\n","   Total_Amt_Chng_Q4_Q1  Total_Trans_Amt  Total_Trans_Ct  Total_Ct_Chng_Q4_Q1  \\\n","0                 1.335             1144              42                1.625   \n","1                 1.541             1291              33                3.714   \n","2                 2.594             1887              20                2.333   \n","3                 1.405             1171              20                2.333   \n","4                 2.175              816              28                2.500   \n","\n","   Avg_Utilization_Ratio  \\\n","0                  0.061   \n","1                  0.105   \n","2                  0.000   \n","3                  0.760   \n","4                  0.000   \n","\n","   Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1  \\\n","0                                           0.000093                                                                                    \n","1                                           0.000057                                                                                    \n","2                                           0.000021                                                                                    \n","3                                           0.000134                                                                                    \n","4                                           0.000022                                                                                    \n","\n","   Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2  \n","0                                            0.99991                                                                                   \n","1                                            0.99994                                                                                   \n","2                                            0.99998                                                                                   \n","3                                            0.99987                                                                                   \n","4                                            0.99998                                                                                   \n","\n","[5 rows x 23 columns]"],"text/html":["\n","  <div id=\"df-173d5060-5294-46e2-8898-23c35e2047bd\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CLIENTNUM</th>\n","      <th>Attrition_Flag</th>\n","      <th>Customer_Age</th>\n","      <th>Gender</th>\n","      <th>Dependent_count</th>\n","      <th>Education_Level</th>\n","      <th>Marital_Status</th>\n","      <th>Income_Category</th>\n","      <th>Card_Category</th>\n","      <th>Months_on_book</th>\n","      <th>...</th>\n","      <th>Credit_Limit</th>\n","      <th>Total_Revolving_Bal</th>\n","      <th>Avg_Open_To_Buy</th>\n","      <th>Total_Amt_Chng_Q4_Q1</th>\n","      <th>Total_Trans_Amt</th>\n","      <th>Total_Trans_Ct</th>\n","      <th>Total_Ct_Chng_Q4_Q1</th>\n","      <th>Avg_Utilization_Ratio</th>\n","      <th>Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1</th>\n","      <th>Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>768805383</td>\n","      <td>Existing Customer</td>\n","      <td>45</td>\n","      <td>M</td>\n","      <td>3</td>\n","      <td>High School</td>\n","      <td>Married</td>\n","      <td>$60K - $80K</td>\n","      <td>Blue</td>\n","      <td>39</td>\n","      <td>...</td>\n","      <td>12691.0</td>\n","      <td>777</td>\n","      <td>11914.0</td>\n","      <td>1.335</td>\n","      <td>1144</td>\n","      <td>42</td>\n","      <td>1.625</td>\n","      <td>0.061</td>\n","      <td>0.000093</td>\n","      <td>0.99991</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>818770008</td>\n","      <td>Existing Customer</td>\n","      <td>49</td>\n","      <td>F</td>\n","      <td>5</td>\n","      <td>Graduate</td>\n","      <td>Single</td>\n","      <td>Less than $40K</td>\n","      <td>Blue</td>\n","      <td>44</td>\n","      <td>...</td>\n","      <td>8256.0</td>\n","      <td>864</td>\n","      <td>7392.0</td>\n","      <td>1.541</td>\n","      <td>1291</td>\n","      <td>33</td>\n","      <td>3.714</td>\n","      <td>0.105</td>\n","      <td>0.000057</td>\n","      <td>0.99994</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>713982108</td>\n","      <td>Existing Customer</td>\n","      <td>51</td>\n","      <td>M</td>\n","      <td>3</td>\n","      <td>Graduate</td>\n","      <td>Married</td>\n","      <td>$80K - $120K</td>\n","      <td>Blue</td>\n","      <td>36</td>\n","      <td>...</td>\n","      <td>3418.0</td>\n","      <td>0</td>\n","      <td>3418.0</td>\n","      <td>2.594</td>\n","      <td>1887</td>\n","      <td>20</td>\n","      <td>2.333</td>\n","      <td>0.000</td>\n","      <td>0.000021</td>\n","      <td>0.99998</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>769911858</td>\n","      <td>Existing Customer</td>\n","      <td>40</td>\n","      <td>F</td>\n","      <td>4</td>\n","      <td>High School</td>\n","      <td>Unknown</td>\n","      <td>Less than $40K</td>\n","      <td>Blue</td>\n","      <td>34</td>\n","      <td>...</td>\n","      <td>3313.0</td>\n","      <td>2517</td>\n","      <td>796.0</td>\n","      <td>1.405</td>\n","      <td>1171</td>\n","      <td>20</td>\n","      <td>2.333</td>\n","      <td>0.760</td>\n","      <td>0.000134</td>\n","      <td>0.99987</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>709106358</td>\n","      <td>Existing Customer</td>\n","      <td>40</td>\n","      <td>M</td>\n","      <td>3</td>\n","      <td>Uneducated</td>\n","      <td>Married</td>\n","      <td>$60K - $80K</td>\n","      <td>Blue</td>\n","      <td>21</td>\n","      <td>...</td>\n","      <td>4716.0</td>\n","      <td>0</td>\n","      <td>4716.0</td>\n","      <td>2.175</td>\n","      <td>816</td>\n","      <td>28</td>\n","      <td>2.500</td>\n","      <td>0.000</td>\n","      <td>0.000022</td>\n","      <td>0.99998</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 23 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-173d5060-5294-46e2-8898-23c35e2047bd')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-173d5060-5294-46e2-8898-23c35e2047bd button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-173d5060-5294-46e2-8898-23c35e2047bd');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7f11bb9e-19de-4fda-baaf-5906135c9689\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7f11bb9e-19de-4fda-baaf-5906135c9689')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7f11bb9e-19de-4fda-baaf-5906135c9689 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["df.tail()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":342},"id":"oDpX5YO2-_lo","executionInfo":{"status":"ok","timestamp":1738823972693,"user_tz":-330,"elapsed":408,"user":{"displayName":"Chandan Kumar","userId":"11565150763274034324"}},"outputId":"8036d85b-380e-4f86-8c8c-27ba0c5c0bd7"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       CLIENTNUM     Attrition_Flag  Customer_Age Gender  Dependent_count  \\\n","10122  772366833  Existing Customer            50      M                2   \n","10123  710638233  Attrited Customer            41      M                2   \n","10124  716506083  Attrited Customer            44      F                1   \n","10125  717406983  Attrited Customer            30      M                2   \n","10126  714337233  Attrited Customer            43      F                2   \n","\n","      Education_Level Marital_Status Income_Category Card_Category  \\\n","10122        Graduate         Single     $40K - $60K          Blue   \n","10123         Unknown       Divorced     $40K - $60K          Blue   \n","10124     High School        Married  Less than $40K          Blue   \n","10125        Graduate        Unknown     $40K - $60K          Blue   \n","10126        Graduate        Married  Less than $40K        Silver   \n","\n","       Months_on_book  ...  Credit_Limit  Total_Revolving_Bal  \\\n","10122              40  ...        4003.0                 1851   \n","10123              25  ...        4277.0                 2186   \n","10124              36  ...        5409.0                    0   \n","10125              36  ...        5281.0                    0   \n","10126              25  ...       10388.0                 1961   \n","\n","       Avg_Open_To_Buy  Total_Amt_Chng_Q4_Q1  Total_Trans_Amt  Total_Trans_Ct  \\\n","10122           2152.0                 0.703            15476             117   \n","10123           2091.0                 0.804             8764              69   \n","10124           5409.0                 0.819            10291              60   \n","10125           5281.0                 0.535             8395              62   \n","10126           8427.0                 0.703            10294              61   \n","\n","       Total_Ct_Chng_Q4_Q1  Avg_Utilization_Ratio  \\\n","10122                0.857                  0.462   \n","10123                0.683                  0.511   \n","10124                0.818                  0.000   \n","10125                0.722                  0.000   \n","10126                0.649                  0.189   \n","\n","       Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1  \\\n","10122                                           0.000191                                                                                    \n","10123                                           0.995270                                                                                    \n","10124                                           0.997880                                                                                    \n","10125                                           0.996710                                                                                    \n","10126                                           0.996620                                                                                    \n","\n","       Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2  \n","10122                                           0.999810                                                                                   \n","10123                                           0.004729                                                                                   \n","10124                                           0.002118                                                                                   \n","10125                                           0.003294                                                                                   \n","10126                                           0.003377                                                                                   \n","\n","[5 rows x 23 columns]"],"text/html":["\n","  <div id=\"df-823fc4f4-caf7-4842-83cb-8bbab32798b5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CLIENTNUM</th>\n","      <th>Attrition_Flag</th>\n","      <th>Customer_Age</th>\n","      <th>Gender</th>\n","      <th>Dependent_count</th>\n","      <th>Education_Level</th>\n","      <th>Marital_Status</th>\n","      <th>Income_Category</th>\n","      <th>Card_Category</th>\n","      <th>Months_on_book</th>\n","      <th>...</th>\n","      <th>Credit_Limit</th>\n","      <th>Total_Revolving_Bal</th>\n","      <th>Avg_Open_To_Buy</th>\n","      <th>Total_Amt_Chng_Q4_Q1</th>\n","      <th>Total_Trans_Amt</th>\n","      <th>Total_Trans_Ct</th>\n","      <th>Total_Ct_Chng_Q4_Q1</th>\n","      <th>Avg_Utilization_Ratio</th>\n","      <th>Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1</th>\n","      <th>Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>10122</th>\n","      <td>772366833</td>\n","      <td>Existing Customer</td>\n","      <td>50</td>\n","      <td>M</td>\n","      <td>2</td>\n","      <td>Graduate</td>\n","      <td>Single</td>\n","      <td>$40K - $60K</td>\n","      <td>Blue</td>\n","      <td>40</td>\n","      <td>...</td>\n","      <td>4003.0</td>\n","      <td>1851</td>\n","      <td>2152.0</td>\n","      <td>0.703</td>\n","      <td>15476</td>\n","      <td>117</td>\n","      <td>0.857</td>\n","      <td>0.462</td>\n","      <td>0.000191</td>\n","      <td>0.999810</td>\n","    </tr>\n","    <tr>\n","      <th>10123</th>\n","      <td>710638233</td>\n","      <td>Attrited Customer</td>\n","      <td>41</td>\n","      <td>M</td>\n","      <td>2</td>\n","      <td>Unknown</td>\n","      <td>Divorced</td>\n","      <td>$40K - $60K</td>\n","      <td>Blue</td>\n","      <td>25</td>\n","      <td>...</td>\n","      <td>4277.0</td>\n","      <td>2186</td>\n","      <td>2091.0</td>\n","      <td>0.804</td>\n","      <td>8764</td>\n","      <td>69</td>\n","      <td>0.683</td>\n","      <td>0.511</td>\n","      <td>0.995270</td>\n","      <td>0.004729</td>\n","    </tr>\n","    <tr>\n","      <th>10124</th>\n","      <td>716506083</td>\n","      <td>Attrited Customer</td>\n","      <td>44</td>\n","      <td>F</td>\n","      <td>1</td>\n","      <td>High School</td>\n","      <td>Married</td>\n","      <td>Less than $40K</td>\n","      <td>Blue</td>\n","      <td>36</td>\n","      <td>...</td>\n","      <td>5409.0</td>\n","      <td>0</td>\n","      <td>5409.0</td>\n","      <td>0.819</td>\n","      <td>10291</td>\n","      <td>60</td>\n","      <td>0.818</td>\n","      <td>0.000</td>\n","      <td>0.997880</td>\n","      <td>0.002118</td>\n","    </tr>\n","    <tr>\n","      <th>10125</th>\n","      <td>717406983</td>\n","      <td>Attrited Customer</td>\n","      <td>30</td>\n","      <td>M</td>\n","      <td>2</td>\n","      <td>Graduate</td>\n","      <td>Unknown</td>\n","      <td>$40K - $60K</td>\n","      <td>Blue</td>\n","      <td>36</td>\n","      <td>...</td>\n","      <td>5281.0</td>\n","      <td>0</td>\n","      <td>5281.0</td>\n","      <td>0.535</td>\n","      <td>8395</td>\n","      <td>62</td>\n","      <td>0.722</td>\n","      <td>0.000</td>\n","      <td>0.996710</td>\n","      <td>0.003294</td>\n","    </tr>\n","    <tr>\n","      <th>10126</th>\n","      <td>714337233</td>\n","      <td>Attrited Customer</td>\n","      <td>43</td>\n","      <td>F</td>\n","      <td>2</td>\n","      <td>Graduate</td>\n","      <td>Married</td>\n","      <td>Less than $40K</td>\n","      <td>Silver</td>\n","      <td>25</td>\n","      <td>...</td>\n","      <td>10388.0</td>\n","      <td>1961</td>\n","      <td>8427.0</td>\n","      <td>0.703</td>\n","      <td>10294</td>\n","      <td>61</td>\n","      <td>0.649</td>\n","      <td>0.189</td>\n","      <td>0.996620</td>\n","      <td>0.003377</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 23 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-823fc4f4-caf7-4842-83cb-8bbab32798b5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-823fc4f4-caf7-4842-83cb-8bbab32798b5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-823fc4f4-caf7-4842-83cb-8bbab32798b5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a20ee570-4057-4863-aed6-eb22d5cabb37\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a20ee570-4057-4863-aed6-eb22d5cabb37')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a20ee570-4057-4863-aed6-eb22d5cabb37 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":5}]},{"cell_type":"markdown","source":["Explor and gain insights"],"metadata":{"id":"bDSi53tpO_fJ"}},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yYi4ut6r_EbX","executionInfo":{"status":"ok","timestamp":1738824875859,"user_tz":-330,"elapsed":515,"user":{"displayName":"Chandan Kumar","userId":"11565150763274034324"}},"outputId":"c441abb5-d848-4f3f-80be-92c7ea9ee9bf"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(10127, 23)"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["print('number of shape :',df.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PjySh8g2Cny6","executionInfo":{"status":"ok","timestamp":1738825003550,"user_tz":-330,"elapsed":526,"user":{"displayName":"Chandan Kumar","userId":"11565150763274034324"}},"outputId":"a06cf308-bb55-4140-e22e-8d2612a7ae1f"},"execution_count":31,"outputs":[{"output_type":"stream","name":"stdout","text":["number of shape : (10127, 23)\n"]}]},{"cell_type":"code","source":["df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pYnvPFtW_MlU","executionInfo":{"status":"ok","timestamp":1738824037942,"user_tz":-330,"elapsed":435,"user":{"displayName":"Chandan Kumar","userId":"11565150763274034324"}},"outputId":"ded4eb4a-f6ec-4028-b5e6-4ee4eaea5fb1"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['CLIENTNUM', 'Attrition_Flag', 'Customer_Age', 'Gender',\n","       'Dependent_count', 'Education_Level', 'Marital_Status',\n","       'Income_Category', 'Card_Category', 'Months_on_book',\n","       'Total_Relationship_Count', 'Months_Inactive_12_mon',\n","       'Contacts_Count_12_mon', 'Credit_Limit', 'Total_Revolving_Bal',\n","       'Avg_Open_To_Buy', 'Total_Amt_Chng_Q4_Q1', 'Total_Trans_Amt',\n","       'Total_Trans_Ct', 'Total_Ct_Chng_Q4_Q1', 'Avg_Utilization_Ratio',\n","       'Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1',\n","       'Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2'],\n","      dtype='object')"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["df.duplicated().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xDKC2Teq_VIV","executionInfo":{"status":"ok","timestamp":1738824076151,"user_tz":-330,"elapsed":531,"user":{"displayName":"Chandan Kumar","userId":"11565150763274034324"}},"outputId":"773a0087-c1f5-46c7-9f38-602fdc9de76c"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["print('number of duplicates :' ,df.duplicated().sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IwBCyx7zBPZl","executionInfo":{"status":"ok","timestamp":1738824789290,"user_tz":-330,"elapsed":519,"user":{"displayName":"Chandan Kumar","userId":"11565150763274034324"}},"outputId":"5795735a-4c90-4cb5-e217-4d93ebd328ca"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["number of duplicates : 0\n"]}]},{"cell_type":"code","source":["df.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":805},"id":"hkStVkps_2J7","executionInfo":{"status":"ok","timestamp":1738824185733,"user_tz":-330,"elapsed":483,"user":{"displayName":"Chandan Kumar","userId":"11565150763274034324"}},"outputId":"342df767-e296-4426-fb46-8311a736afc5"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["CLIENTNUM                                                                                                                             0\n","Attrition_Flag                                                                                                                        0\n","Customer_Age                                                                                                                          0\n","Gender                                                                                                                                0\n","Dependent_count                                                                                                                       0\n","Education_Level                                                                                                                       0\n","Marital_Status                                                                                                                        0\n","Income_Category                                                                                                                       0\n","Card_Category                                                                                                                         0\n","Months_on_book                                                                                                                        0\n","Total_Relationship_Count                                                                                                              0\n","Months_Inactive_12_mon                                                                                                                0\n","Contacts_Count_12_mon                                                                                                                 0\n","Credit_Limit                                                                                                                          0\n","Total_Revolving_Bal                                                                                                                   0\n","Avg_Open_To_Buy                                                                                                                       0\n","Total_Amt_Chng_Q4_Q1                                                                                                                  0\n","Total_Trans_Amt                                                                                                                       0\n","Total_Trans_Ct                                                                                                                        0\n","Total_Ct_Chng_Q4_Q1                                                                                                                   0\n","Avg_Utilization_Ratio                                                                                                                 0\n","Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1    0\n","Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2    0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>CLIENTNUM</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Attrition_Flag</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Customer_Age</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Gender</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Dependent_count</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Education_Level</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Marital_Status</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Income_Category</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Card_Category</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Months_on_book</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Total_Relationship_Count</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Months_Inactive_12_mon</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Contacts_Count_12_mon</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Credit_Limit</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Total_Revolving_Bal</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Avg_Open_To_Buy</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Total_Amt_Chng_Q4_Q1</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Total_Trans_Amt</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Total_Trans_Ct</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Total_Ct_Chng_Q4_Q1</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Avg_Utilization_Ratio</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["df.dtypes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":805},"id":"vw0pxg_6_-xX","executionInfo":{"status":"ok","timestamp":1738824224167,"user_tz":-330,"elapsed":511,"user":{"displayName":"Chandan Kumar","userId":"11565150763274034324"}},"outputId":"c5524bdf-a3cc-4b7c-fbaa-2c8915871289"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["CLIENTNUM                                                                                                                               int64\n","Attrition_Flag                                                                                                                         object\n","Customer_Age                                                                                                                            int64\n","Gender                                                                                                                                 object\n","Dependent_count                                                                                                                         int64\n","Education_Level                                                                                                                        object\n","Marital_Status                                                                                                                         object\n","Income_Category                                                                                                                        object\n","Card_Category                                                                                                                          object\n","Months_on_book                                                                                                                          int64\n","Total_Relationship_Count                                                                                                                int64\n","Months_Inactive_12_mon                                                                                                                  int64\n","Contacts_Count_12_mon                                                                                                                   int64\n","Credit_Limit                                                                                                                          float64\n","Total_Revolving_Bal                                                                                                                     int64\n","Avg_Open_To_Buy                                                                                                                       float64\n","Total_Amt_Chng_Q4_Q1                                                                                                                  float64\n","Total_Trans_Amt                                                                                                                         int64\n","Total_Trans_Ct                                                                                                                          int64\n","Total_Ct_Chng_Q4_Q1                                                                                                                   float64\n","Avg_Utilization_Ratio                                                                                                                 float64\n","Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1    float64\n","Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2    float64\n","dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>CLIENTNUM</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>Attrition_Flag</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Customer_Age</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>Gender</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Dependent_count</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>Education_Level</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Marital_Status</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Income_Category</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Card_Category</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Months_on_book</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>Total_Relationship_Count</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>Months_Inactive_12_mon</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>Contacts_Count_12_mon</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>Credit_Limit</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>Total_Revolving_Bal</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>Avg_Open_To_Buy</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>Total_Amt_Chng_Q4_Q1</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>Total_Trans_Amt</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>Total_Trans_Ct</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>Total_Ct_Chng_Q4_Q1</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>Avg_Utilization_Ratio</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2</th>\n","      <td>float64</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kzKo8PyTAHKp","executionInfo":{"status":"ok","timestamp":1738824255650,"user_tz":-330,"elapsed":447,"user":{"displayName":"Chandan Kumar","userId":"11565150763274034324"}},"outputId":"8f4a411e-3a50-40ca-bfd1-1aef1d3b6993"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 10127 entries, 0 to 10126\n","Data columns (total 23 columns):\n"," #   Column                                                                                                                              Non-Null Count  Dtype  \n","---  ------                                                                                                                              --------------  -----  \n"," 0   CLIENTNUM                                                                                                                           10127 non-null  int64  \n"," 1   Attrition_Flag                                                                                                                      10127 non-null  object \n"," 2   Customer_Age                                                                                                                        10127 non-null  int64  \n"," 3   Gender                                                                                                                              10127 non-null  object \n"," 4   Dependent_count                                                                                                                     10127 non-null  int64  \n"," 5   Education_Level                                                                                                                     10127 non-null  object \n"," 6   Marital_Status                                                                                                                      10127 non-null  object \n"," 7   Income_Category                                                                                                                     10127 non-null  object \n"," 8   Card_Category                                                                                                                       10127 non-null  object \n"," 9   Months_on_book                                                                                                                      10127 non-null  int64  \n"," 10  Total_Relationship_Count                                                                                                            10127 non-null  int64  \n"," 11  Months_Inactive_12_mon                                                                                                              10127 non-null  int64  \n"," 12  Contacts_Count_12_mon                                                                                                               10127 non-null  int64  \n"," 13  Credit_Limit                                                                                                                        10127 non-null  float64\n"," 14  Total_Revolving_Bal                                                                                                                 10127 non-null  int64  \n"," 15  Avg_Open_To_Buy                                                                                                                     10127 non-null  float64\n"," 16  Total_Amt_Chng_Q4_Q1                                                                                                                10127 non-null  float64\n"," 17  Total_Trans_Amt                                                                                                                     10127 non-null  int64  \n"," 18  Total_Trans_Ct                                                                                                                      10127 non-null  int64  \n"," 19  Total_Ct_Chng_Q4_Q1                                                                                                                 10127 non-null  float64\n"," 20  Avg_Utilization_Ratio                                                                                                               10127 non-null  float64\n"," 21  Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1  10127 non-null  float64\n"," 22  Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2  10127 non-null  float64\n","dtypes: float64(7), int64(10), object(6)\n","memory usage: 1.8+ MB\n"]}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":320},"id":"VCbPuMU_ARy8","executionInfo":{"status":"ok","timestamp":1738824312938,"user_tz":-330,"elapsed":591,"user":{"displayName":"Chandan Kumar","userId":"11565150763274034324"}},"outputId":"f3359a07-9aa7-4811-c7db-a85444a23f48"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          CLIENTNUM  Customer_Age  Dependent_count  Months_on_book  \\\n","count  1.012700e+04  10127.000000     10127.000000    10127.000000   \n","mean   7.391776e+08     46.325960         2.346203       35.928409   \n","std    3.690378e+07      8.016814         1.298908        7.986416   \n","min    7.080821e+08     26.000000         0.000000       13.000000   \n","25%    7.130368e+08     41.000000         1.000000       31.000000   \n","50%    7.179264e+08     46.000000         2.000000       36.000000   \n","75%    7.731435e+08     52.000000         3.000000       40.000000   \n","max    8.283431e+08     73.000000         5.000000       56.000000   \n","\n","       Total_Relationship_Count  Months_Inactive_12_mon  \\\n","count              10127.000000            10127.000000   \n","mean                   3.812580                2.341167   \n","std                    1.554408                1.010622   \n","min                    1.000000                0.000000   \n","25%                    3.000000                2.000000   \n","50%                    4.000000                2.000000   \n","75%                    5.000000                3.000000   \n","max                    6.000000                6.000000   \n","\n","       Contacts_Count_12_mon  Credit_Limit  Total_Revolving_Bal  \\\n","count           10127.000000  10127.000000         10127.000000   \n","mean                2.455317   8631.953698          1162.814061   \n","std                 1.106225   9088.776650           814.987335   \n","min                 0.000000   1438.300000             0.000000   \n","25%                 2.000000   2555.000000           359.000000   \n","50%                 2.000000   4549.000000          1276.000000   \n","75%                 3.000000  11067.500000          1784.000000   \n","max                 6.000000  34516.000000          2517.000000   \n","\n","       Avg_Open_To_Buy  Total_Amt_Chng_Q4_Q1  Total_Trans_Amt  Total_Trans_Ct  \\\n","count     10127.000000          10127.000000     10127.000000    10127.000000   \n","mean       7469.139637              0.759941      4404.086304       64.858695   \n","std        9090.685324              0.219207      3397.129254       23.472570   \n","min           3.000000              0.000000       510.000000       10.000000   \n","25%        1324.500000              0.631000      2155.500000       45.000000   \n","50%        3474.000000              0.736000      3899.000000       67.000000   \n","75%        9859.000000              0.859000      4741.000000       81.000000   \n","max       34516.000000              3.397000     18484.000000      139.000000   \n","\n","       Total_Ct_Chng_Q4_Q1  Avg_Utilization_Ratio  \\\n","count         10127.000000           10127.000000   \n","mean              0.712222               0.274894   \n","std               0.238086               0.275691   \n","min               0.000000               0.000000   \n","25%               0.582000               0.023000   \n","50%               0.702000               0.176000   \n","75%               0.818000               0.503000   \n","max               3.714000               0.999000   \n","\n","       Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1  \\\n","count                                       10127.000000                                                                                    \n","mean                                            0.159997                                                                                    \n","std                                             0.365301                                                                                    \n","min                                             0.000008                                                                                    \n","25%                                             0.000099                                                                                    \n","50%                                             0.000181                                                                                    \n","75%                                             0.000337                                                                                    \n","max                                             0.999580                                                                                    \n","\n","       Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2  \n","count                                       10127.000000                                                                                   \n","mean                                            0.840003                                                                                   \n","std                                             0.365301                                                                                   \n","min                                             0.000420                                                                                   \n","25%                                             0.999660                                                                                   \n","50%                                             0.999820                                                                                   \n","75%                                             0.999900                                                                                   \n","max                                             0.999990                                                                                   "],"text/html":["\n","  <div id=\"df-2d56d891-e115-433a-a1f6-044cae9bc347\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CLIENTNUM</th>\n","      <th>Customer_Age</th>\n","      <th>Dependent_count</th>\n","      <th>Months_on_book</th>\n","      <th>Total_Relationship_Count</th>\n","      <th>Months_Inactive_12_mon</th>\n","      <th>Contacts_Count_12_mon</th>\n","      <th>Credit_Limit</th>\n","      <th>Total_Revolving_Bal</th>\n","      <th>Avg_Open_To_Buy</th>\n","      <th>Total_Amt_Chng_Q4_Q1</th>\n","      <th>Total_Trans_Amt</th>\n","      <th>Total_Trans_Ct</th>\n","      <th>Total_Ct_Chng_Q4_Q1</th>\n","      <th>Avg_Utilization_Ratio</th>\n","      <th>Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1</th>\n","      <th>Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>1.012700e+04</td>\n","      <td>10127.000000</td>\n","      <td>10127.000000</td>\n","      <td>10127.000000</td>\n","      <td>10127.000000</td>\n","      <td>10127.000000</td>\n","      <td>10127.000000</td>\n","      <td>10127.000000</td>\n","      <td>10127.000000</td>\n","      <td>10127.000000</td>\n","      <td>10127.000000</td>\n","      <td>10127.000000</td>\n","      <td>10127.000000</td>\n","      <td>10127.000000</td>\n","      <td>10127.000000</td>\n","      <td>10127.000000</td>\n","      <td>10127.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>7.391776e+08</td>\n","      <td>46.325960</td>\n","      <td>2.346203</td>\n","      <td>35.928409</td>\n","      <td>3.812580</td>\n","      <td>2.341167</td>\n","      <td>2.455317</td>\n","      <td>8631.953698</td>\n","      <td>1162.814061</td>\n","      <td>7469.139637</td>\n","      <td>0.759941</td>\n","      <td>4404.086304</td>\n","      <td>64.858695</td>\n","      <td>0.712222</td>\n","      <td>0.274894</td>\n","      <td>0.159997</td>\n","      <td>0.840003</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>3.690378e+07</td>\n","      <td>8.016814</td>\n","      <td>1.298908</td>\n","      <td>7.986416</td>\n","      <td>1.554408</td>\n","      <td>1.010622</td>\n","      <td>1.106225</td>\n","      <td>9088.776650</td>\n","      <td>814.987335</td>\n","      <td>9090.685324</td>\n","      <td>0.219207</td>\n","      <td>3397.129254</td>\n","      <td>23.472570</td>\n","      <td>0.238086</td>\n","      <td>0.275691</td>\n","      <td>0.365301</td>\n","      <td>0.365301</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>7.080821e+08</td>\n","      <td>26.000000</td>\n","      <td>0.000000</td>\n","      <td>13.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1438.300000</td>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>0.000000</td>\n","      <td>510.000000</td>\n","      <td>10.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000008</td>\n","      <td>0.000420</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>7.130368e+08</td>\n","      <td>41.000000</td>\n","      <td>1.000000</td>\n","      <td>31.000000</td>\n","      <td>3.000000</td>\n","      <td>2.000000</td>\n","      <td>2.000000</td>\n","      <td>2555.000000</td>\n","      <td>359.000000</td>\n","      <td>1324.500000</td>\n","      <td>0.631000</td>\n","      <td>2155.500000</td>\n","      <td>45.000000</td>\n","      <td>0.582000</td>\n","      <td>0.023000</td>\n","      <td>0.000099</td>\n","      <td>0.999660</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>7.179264e+08</td>\n","      <td>46.000000</td>\n","      <td>2.000000</td>\n","      <td>36.000000</td>\n","      <td>4.000000</td>\n","      <td>2.000000</td>\n","      <td>2.000000</td>\n","      <td>4549.000000</td>\n","      <td>1276.000000</td>\n","      <td>3474.000000</td>\n","      <td>0.736000</td>\n","      <td>3899.000000</td>\n","      <td>67.000000</td>\n","      <td>0.702000</td>\n","      <td>0.176000</td>\n","      <td>0.000181</td>\n","      <td>0.999820</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>7.731435e+08</td>\n","      <td>52.000000</td>\n","      <td>3.000000</td>\n","      <td>40.000000</td>\n","      <td>5.000000</td>\n","      <td>3.000000</td>\n","      <td>3.000000</td>\n","      <td>11067.500000</td>\n","      <td>1784.000000</td>\n","      <td>9859.000000</td>\n","      <td>0.859000</td>\n","      <td>4741.000000</td>\n","      <td>81.000000</td>\n","      <td>0.818000</td>\n","      <td>0.503000</td>\n","      <td>0.000337</td>\n","      <td>0.999900</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>8.283431e+08</td>\n","      <td>73.000000</td>\n","      <td>5.000000</td>\n","      <td>56.000000</td>\n","      <td>6.000000</td>\n","      <td>6.000000</td>\n","      <td>6.000000</td>\n","      <td>34516.000000</td>\n","      <td>2517.000000</td>\n","      <td>34516.000000</td>\n","      <td>3.397000</td>\n","      <td>18484.000000</td>\n","      <td>139.000000</td>\n","      <td>3.714000</td>\n","      <td>0.999000</td>\n","      <td>0.999580</td>\n","      <td>0.999990</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2d56d891-e115-433a-a1f6-044cae9bc347')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2d56d891-e115-433a-a1f6-044cae9bc347 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2d56d891-e115-433a-a1f6-044cae9bc347');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ad20c945-2b13-474e-b323-0f1764c4f50f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ad20c945-2b13-474e-b323-0f1764c4f50f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ad20c945-2b13-474e-b323-0f1764c4f50f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"CLIENTNUM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 339512830.0563034,\n        \"min\": 10127.0,\n        \"max\": 828343083.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          739177606.3336625,\n          717926358.0,\n          10127.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Customer_Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3565.7198708729024,\n        \"min\": 8.016814032549084,\n        \"max\": 10127.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          46.32596030413745,\n          46.0,\n          10127.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dependent_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3579.695807022644,\n        \"min\": 0.0,\n        \"max\": 10127.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2.3462032191172115,\n          2.0,\n          10127.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Months_on_book\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3569.3599832978616,\n        \"min\": 7.986416330871776,\n        \"max\": 10127.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          35.928409203120374,\n          36.0,\n          10127.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Relationship_Count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3579.204849565556,\n        \"min\": 1.0,\n        \"max\": 10127.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3.8125802310654686,\n          4.0,\n          10127.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Months_Inactive_12_mon\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3579.609721574483,\n        \"min\": 0.0,\n        \"max\": 10127.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          10127.0,\n          2.3411671768539546,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Contacts_Count_12_mon\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3579.5991227316104,\n        \"min\": 0.0,\n        \"max\": 10127.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          10127.0,\n          2.4553174681544387,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Credit_Limit\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10439.274058388912,\n        \"min\": 1438.3,\n        \"max\": 34516.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          8631.953698034955,\n          4549.0,\n          10127.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Revolving_Bal\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3276.8377072771536,\n        \"min\": 0.0,\n        \"max\": 10127.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1162.8140614199665,\n          1276.0,\n          10127.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Avg_Open_To_Buy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10849.334071476527,\n        \"min\": 3.0,\n        \"max\": 34516.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          7469.139636614989,\n          3474.0,\n          10127.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Amt_Chng_Q4_Q1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3580.101879688154,\n        \"min\": 0.0,\n        \"max\": 10127.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.7599406536980349,\n          0.736,\n          10127.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Trans_Amt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5770.786816057116,\n        \"min\": 510.0,\n        \"max\": 18484.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          4404.086303939963,\n          3899.0,\n          10127.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Trans_Ct\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3558.916913530285,\n        \"min\": 10.0,\n        \"max\": 10127.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          64.85869457884863,\n          67.0,\n          10127.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Ct_Chng_Q4_Q1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3580.0936222607697,\n        \"min\": 0.0,\n        \"max\": 10127.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.7122223758269972,\n          0.702,\n          10127.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Avg_Utilization_Ratio\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3580.321478482974,\n        \"min\": 0.0,\n        \"max\": 10127.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.2748935518909845,\n          0.176,\n          10127.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3580.358153429803,\n        \"min\": 7.66e-06,\n        \"max\": 10127.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.15999746437444456,\n          0.00018146,\n          10127.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3580.172308911428,\n        \"min\": 0.00041998,\n        \"max\": 10127.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.8400025708403278,\n          0.99982,\n          10127.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["df.nunique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":805},"id":"orXERd57AXb3","executionInfo":{"status":"ok","timestamp":1738824346439,"user_tz":-330,"elapsed":501,"user":{"displayName":"Chandan Kumar","userId":"11565150763274034324"}},"outputId":"cd290c65-b438-4849-d305-3abcc231a434"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["CLIENTNUM                                                                                                                             10127\n","Attrition_Flag                                                                                                                            2\n","Customer_Age                                                                                                                             45\n","Gender                                                                                                                                    2\n","Dependent_count                                                                                                                           6\n","Education_Level                                                                                                                           7\n","Marital_Status                                                                                                                            4\n","Income_Category                                                                                                                           6\n","Card_Category                                                                                                                             4\n","Months_on_book                                                                                                                           44\n","Total_Relationship_Count                                                                                                                  6\n","Months_Inactive_12_mon                                                                                                                    7\n","Contacts_Count_12_mon                                                                                                                     7\n","Credit_Limit                                                                                                                           6205\n","Total_Revolving_Bal                                                                                                                    1974\n","Avg_Open_To_Buy                                                                                                                        6813\n","Total_Amt_Chng_Q4_Q1                                                                                                                   1158\n","Total_Trans_Amt                                                                                                                        5033\n","Total_Trans_Ct                                                                                                                          126\n","Total_Ct_Chng_Q4_Q1                                                                                                                     830\n","Avg_Utilization_Ratio                                                                                                                   964\n","Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1     1591\n","Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2      640\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>CLIENTNUM</th>\n","      <td>10127</td>\n","    </tr>\n","    <tr>\n","      <th>Attrition_Flag</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>Customer_Age</th>\n","      <td>45</td>\n","    </tr>\n","    <tr>\n","      <th>Gender</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>Dependent_count</th>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>Education_Level</th>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>Marital_Status</th>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>Income_Category</th>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>Card_Category</th>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>Months_on_book</th>\n","      <td>44</td>\n","    </tr>\n","    <tr>\n","      <th>Total_Relationship_Count</th>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>Months_Inactive_12_mon</th>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>Contacts_Count_12_mon</th>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>Credit_Limit</th>\n","      <td>6205</td>\n","    </tr>\n","    <tr>\n","      <th>Total_Revolving_Bal</th>\n","      <td>1974</td>\n","    </tr>\n","    <tr>\n","      <th>Avg_Open_To_Buy</th>\n","      <td>6813</td>\n","    </tr>\n","    <tr>\n","      <th>Total_Amt_Chng_Q4_Q1</th>\n","      <td>1158</td>\n","    </tr>\n","    <tr>\n","      <th>Total_Trans_Amt</th>\n","      <td>5033</td>\n","    </tr>\n","    <tr>\n","      <th>Total_Trans_Ct</th>\n","      <td>126</td>\n","    </tr>\n","    <tr>\n","      <th>Total_Ct_Chng_Q4_Q1</th>\n","      <td>830</td>\n","    </tr>\n","    <tr>\n","      <th>Avg_Utilization_Ratio</th>\n","      <td>964</td>\n","    </tr>\n","    <tr>\n","      <th>Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1</th>\n","      <td>1591</td>\n","    </tr>\n","    <tr>\n","      <th>Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2</th>\n","      <td>640</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["df.iloc[10:20]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":585},"id":"dsFTLpPcAlxz","executionInfo":{"status":"ok","timestamp":1738824443501,"user_tz":-330,"elapsed":546,"user":{"displayName":"Chandan Kumar","userId":"11565150763274034324"}},"outputId":"7402e5e2-7d8c-4f09-9256-357b8425516d"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    CLIENTNUM     Attrition_Flag  Customer_Age Gender  Dependent_count  \\\n","10  708790833  Existing Customer            42      M                5   \n","11  710821833  Existing Customer            65      M                1   \n","12  710599683  Existing Customer            56      M                1   \n","13  816082233  Existing Customer            35      M                3   \n","14  712396908  Existing Customer            57      F                2   \n","15  714885258  Existing Customer            44      M                4   \n","16  709967358  Existing Customer            48      M                4   \n","17  753327333  Existing Customer            41      M                3   \n","18  806160108  Existing Customer            61      M                1   \n","19  709327383  Existing Customer            45      F                2   \n","\n","   Education_Level Marital_Status Income_Category Card_Category  \\\n","10      Uneducated        Unknown         $120K +          Blue   \n","11         Unknown        Married     $40K - $60K          Blue   \n","12         College         Single    $80K - $120K          Blue   \n","13        Graduate        Unknown     $60K - $80K          Blue   \n","14        Graduate        Married  Less than $40K          Blue   \n","15         Unknown        Unknown    $80K - $120K          Blue   \n","16   Post-Graduate         Single    $80K - $120K          Blue   \n","17         Unknown        Married    $80K - $120K          Blue   \n","18     High School        Married     $40K - $60K          Blue   \n","19        Graduate        Married         Unknown          Blue   \n","\n","    Months_on_book  ...  Credit_Limit  Total_Revolving_Bal  Avg_Open_To_Buy  \\\n","10              31  ...        6748.0                 1467           5281.0   \n","11              54  ...        9095.0                 1587           7508.0   \n","12              36  ...       11751.0                    0          11751.0   \n","13              30  ...        8547.0                 1666           6881.0   \n","14              48  ...        2436.0                  680           1756.0   \n","15              37  ...        4234.0                  972           3262.0   \n","16              36  ...       30367.0                 2362          28005.0   \n","17              34  ...       13535.0                 1291          12244.0   \n","18              56  ...        3193.0                 2517            676.0   \n","19              37  ...       14470.0                 1157          13313.0   \n","\n","    Total_Amt_Chng_Q4_Q1  Total_Trans_Amt  Total_Trans_Ct  \\\n","10                 0.831             1201              42   \n","11                 1.433             1314              26   \n","12                 3.397             1539              17   \n","13                 1.163             1311              33   \n","14                 1.190             1570              29   \n","15                 1.707             1348              27   \n","16                 1.708             1671              27   \n","17                 0.653             1028              21   \n","18                 1.831             1336              30   \n","19                 0.966             1207              21   \n","\n","    Total_Ct_Chng_Q4_Q1  Avg_Utilization_Ratio  \\\n","10                0.680                  0.217   \n","11                1.364                  0.174   \n","12                3.250                  0.000   \n","13                2.000                  0.195   \n","14                0.611                  0.279   \n","15                1.700                  0.230   \n","16                0.929                  0.078   \n","17                1.625                  0.095   \n","18                1.143                  0.788   \n","19                0.909                  0.080   \n","\n","    Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1  \\\n","10                                           0.000191                                                                                    \n","11                                           0.000198                                                                                    \n","12                                           0.000048                                                                                    \n","13                                           0.000096                                                                                    \n","14                                           0.000114                                                                                    \n","15                                           0.000063                                                                                    \n","16                                           0.000236                                                                                    \n","17                                           0.000150                                                                                    \n","18                                           0.000175                                                                                    \n","19                                           0.000055                                                                                    \n","\n","    Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2  \n","10                                            0.99981                                                                                   \n","11                                            0.99980                                                                                   \n","12                                            0.99995                                                                                   \n","13                                            0.99990                                                                                   \n","14                                            0.99989                                                                                   \n","15                                            0.99994                                                                                   \n","16                                            0.99976                                                                                   \n","17                                            0.99985                                                                                   \n","18                                            0.99983                                                                                   \n","19                                            0.99994                                                                                   \n","\n","[10 rows x 23 columns]"],"text/html":["\n","  <div id=\"df-63ebe53d-58e4-4547-9839-5820be3b154a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CLIENTNUM</th>\n","      <th>Attrition_Flag</th>\n","      <th>Customer_Age</th>\n","      <th>Gender</th>\n","      <th>Dependent_count</th>\n","      <th>Education_Level</th>\n","      <th>Marital_Status</th>\n","      <th>Income_Category</th>\n","      <th>Card_Category</th>\n","      <th>Months_on_book</th>\n","      <th>...</th>\n","      <th>Credit_Limit</th>\n","      <th>Total_Revolving_Bal</th>\n","      <th>Avg_Open_To_Buy</th>\n","      <th>Total_Amt_Chng_Q4_Q1</th>\n","      <th>Total_Trans_Amt</th>\n","      <th>Total_Trans_Ct</th>\n","      <th>Total_Ct_Chng_Q4_Q1</th>\n","      <th>Avg_Utilization_Ratio</th>\n","      <th>Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1</th>\n","      <th>Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>10</th>\n","      <td>708790833</td>\n","      <td>Existing Customer</td>\n","      <td>42</td>\n","      <td>M</td>\n","      <td>5</td>\n","      <td>Uneducated</td>\n","      <td>Unknown</td>\n","      <td>$120K +</td>\n","      <td>Blue</td>\n","      <td>31</td>\n","      <td>...</td>\n","      <td>6748.0</td>\n","      <td>1467</td>\n","      <td>5281.0</td>\n","      <td>0.831</td>\n","      <td>1201</td>\n","      <td>42</td>\n","      <td>0.680</td>\n","      <td>0.217</td>\n","      <td>0.000191</td>\n","      <td>0.99981</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>710821833</td>\n","      <td>Existing Customer</td>\n","      <td>65</td>\n","      <td>M</td>\n","      <td>1</td>\n","      <td>Unknown</td>\n","      <td>Married</td>\n","      <td>$40K - $60K</td>\n","      <td>Blue</td>\n","      <td>54</td>\n","      <td>...</td>\n","      <td>9095.0</td>\n","      <td>1587</td>\n","      <td>7508.0</td>\n","      <td>1.433</td>\n","      <td>1314</td>\n","      <td>26</td>\n","      <td>1.364</td>\n","      <td>0.174</td>\n","      <td>0.000198</td>\n","      <td>0.99980</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>710599683</td>\n","      <td>Existing Customer</td>\n","      <td>56</td>\n","      <td>M</td>\n","      <td>1</td>\n","      <td>College</td>\n","      <td>Single</td>\n","      <td>$80K - $120K</td>\n","      <td>Blue</td>\n","      <td>36</td>\n","      <td>...</td>\n","      <td>11751.0</td>\n","      <td>0</td>\n","      <td>11751.0</td>\n","      <td>3.397</td>\n","      <td>1539</td>\n","      <td>17</td>\n","      <td>3.250</td>\n","      <td>0.000</td>\n","      <td>0.000048</td>\n","      <td>0.99995</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>816082233</td>\n","      <td>Existing Customer</td>\n","      <td>35</td>\n","      <td>M</td>\n","      <td>3</td>\n","      <td>Graduate</td>\n","      <td>Unknown</td>\n","      <td>$60K - $80K</td>\n","      <td>Blue</td>\n","      <td>30</td>\n","      <td>...</td>\n","      <td>8547.0</td>\n","      <td>1666</td>\n","      <td>6881.0</td>\n","      <td>1.163</td>\n","      <td>1311</td>\n","      <td>33</td>\n","      <td>2.000</td>\n","      <td>0.195</td>\n","      <td>0.000096</td>\n","      <td>0.99990</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>712396908</td>\n","      <td>Existing Customer</td>\n","      <td>57</td>\n","      <td>F</td>\n","      <td>2</td>\n","      <td>Graduate</td>\n","      <td>Married</td>\n","      <td>Less than $40K</td>\n","      <td>Blue</td>\n","      <td>48</td>\n","      <td>...</td>\n","      <td>2436.0</td>\n","      <td>680</td>\n","      <td>1756.0</td>\n","      <td>1.190</td>\n","      <td>1570</td>\n","      <td>29</td>\n","      <td>0.611</td>\n","      <td>0.279</td>\n","      <td>0.000114</td>\n","      <td>0.99989</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>714885258</td>\n","      <td>Existing Customer</td>\n","      <td>44</td>\n","      <td>M</td>\n","      <td>4</td>\n","      <td>Unknown</td>\n","      <td>Unknown</td>\n","      <td>$80K - $120K</td>\n","      <td>Blue</td>\n","      <td>37</td>\n","      <td>...</td>\n","      <td>4234.0</td>\n","      <td>972</td>\n","      <td>3262.0</td>\n","      <td>1.707</td>\n","      <td>1348</td>\n","      <td>27</td>\n","      <td>1.700</td>\n","      <td>0.230</td>\n","      <td>0.000063</td>\n","      <td>0.99994</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>709967358</td>\n","      <td>Existing Customer</td>\n","      <td>48</td>\n","      <td>M</td>\n","      <td>4</td>\n","      <td>Post-Graduate</td>\n","      <td>Single</td>\n","      <td>$80K - $120K</td>\n","      <td>Blue</td>\n","      <td>36</td>\n","      <td>...</td>\n","      <td>30367.0</td>\n","      <td>2362</td>\n","      <td>28005.0</td>\n","      <td>1.708</td>\n","      <td>1671</td>\n","      <td>27</td>\n","      <td>0.929</td>\n","      <td>0.078</td>\n","      <td>0.000236</td>\n","      <td>0.99976</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>753327333</td>\n","      <td>Existing Customer</td>\n","      <td>41</td>\n","      <td>M</td>\n","      <td>3</td>\n","      <td>Unknown</td>\n","      <td>Married</td>\n","      <td>$80K - $120K</td>\n","      <td>Blue</td>\n","      <td>34</td>\n","      <td>...</td>\n","      <td>13535.0</td>\n","      <td>1291</td>\n","      <td>12244.0</td>\n","      <td>0.653</td>\n","      <td>1028</td>\n","      <td>21</td>\n","      <td>1.625</td>\n","      <td>0.095</td>\n","      <td>0.000150</td>\n","      <td>0.99985</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>806160108</td>\n","      <td>Existing Customer</td>\n","      <td>61</td>\n","      <td>M</td>\n","      <td>1</td>\n","      <td>High School</td>\n","      <td>Married</td>\n","      <td>$40K - $60K</td>\n","      <td>Blue</td>\n","      <td>56</td>\n","      <td>...</td>\n","      <td>3193.0</td>\n","      <td>2517</td>\n","      <td>676.0</td>\n","      <td>1.831</td>\n","      <td>1336</td>\n","      <td>30</td>\n","      <td>1.143</td>\n","      <td>0.788</td>\n","      <td>0.000175</td>\n","      <td>0.99983</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>709327383</td>\n","      <td>Existing Customer</td>\n","      <td>45</td>\n","      <td>F</td>\n","      <td>2</td>\n","      <td>Graduate</td>\n","      <td>Married</td>\n","      <td>Unknown</td>\n","      <td>Blue</td>\n","      <td>37</td>\n","      <td>...</td>\n","      <td>14470.0</td>\n","      <td>1157</td>\n","      <td>13313.0</td>\n","      <td>0.966</td>\n","      <td>1207</td>\n","      <td>21</td>\n","      <td>0.909</td>\n","      <td>0.080</td>\n","      <td>0.000055</td>\n","      <td>0.99994</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10 rows Ã— 23 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-63ebe53d-58e4-4547-9839-5820be3b154a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-63ebe53d-58e4-4547-9839-5820be3b154a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-63ebe53d-58e4-4547-9839-5820be3b154a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b493e0ca-d50f-4b94-9fa0-9b2b4fc581e3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b493e0ca-d50f-4b94-9fa0-9b2b4fc581e3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b493e0ca-d50f-4b94-9fa0-9b2b4fc581e3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["df['Gender'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vFYSUs4kBE2X","executionInfo":{"status":"ok","timestamp":1738825271570,"user_tz":-330,"elapsed":443,"user":{"displayName":"Chandan Kumar","userId":"11565150763274034324"}},"outputId":"8443c289-c8e6-40e6-ae1f-6d6ee96c4c0e"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['M', 'F'], dtype=object)"]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["df['Gender'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"id":"OaPo6RicEC3S","executionInfo":{"status":"ok","timestamp":1738825348227,"user_tz":-330,"elapsed":384,"user":{"displayName":"Chandan Kumar","userId":"11565150763274034324"}},"outputId":"59442068-5a02-4f39-d178-5d8b1f329866"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Gender\n","F    5358\n","M    4769\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>Gender</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>F</th>\n","      <td>5358</td>\n","    </tr>\n","    <tr>\n","      <th>M</th>\n","      <td>4769</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["df['Gender'].value_counts().index"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jhgK5V2zEXFo","executionInfo":{"status":"ok","timestamp":1738825408632,"user_tz":-330,"elapsed":403,"user":{"displayName":"Chandan Kumar","userId":"11565150763274034324"}},"outputId":"3c08f948-cafc-4cbf-da64-0488d39963c5"},"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['F', 'M'], dtype='object', name='Gender')"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["df.groupby(\"Attrition_Flag\").agg({\"Customer_Age\": \"mean\"})"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"BC0PL6r7GilD","executionInfo":{"status":"ok","timestamp":1738825995177,"user_tz":-330,"elapsed":432,"user":{"displayName":"Chandan Kumar","userId":"11565150763274034324"}},"outputId":"799e4624-1e17-406f-cfdf-09a8d6eb28ac"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   Customer_Age\n","Attrition_Flag                 \n","Attrited Customer     46.659496\n","Existing Customer     46.262118"],"text/html":["\n","  <div id=\"df-e2396017-8747-4cc3-932f-75f78f15944d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Customer_Age</th>\n","    </tr>\n","    <tr>\n","      <th>Attrition_Flag</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Attrited Customer</th>\n","      <td>46.659496</td>\n","    </tr>\n","    <tr>\n","      <th>Existing Customer</th>\n","      <td>46.262118</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e2396017-8747-4cc3-932f-75f78f15944d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e2396017-8747-4cc3-932f-75f78f15944d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e2396017-8747-4cc3-932f-75f78f15944d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-70b8c83e-e8f7-44a6-b53f-9028161d3de0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-70b8c83e-e8f7-44a6-b53f-9028161d3de0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-70b8c83e-e8f7-44a6-b53f-9028161d3de0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"Attrition_Flag\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Existing Customer\",\n          \"Attrited Customer\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Customer_Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2809889315383089,\n        \"min\": 46.26211764705882,\n        \"max\": 46.659496004917024,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          46.26211764705882,\n          46.659496004917024\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["plt.figure(figsize=(8, 8))\n","\n","sns.histplot(df[\"Customer_Age\"],kde=True,color=\"royalblue\")\n","plt.title('Age Distribution for Customers')\n","plt.xlabel('Age')\n","plt.ylabel('Density')\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":718},"id":"1nby4blCGyLt","executionInfo":{"status":"ok","timestamp":1738826186404,"user_tz":-330,"elapsed":740,"user":{"displayName":"Chandan Kumar","userId":"11565150763274034324"}},"outputId":"57f81822-161c-48dd-e6eb-93db6c27082f"},"execution_count":41,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["counts = df.groupby(['Gender', 'Attrition_Flag']).size().reset_index(name='Frequency')\n","counts"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":174},"id":"WUKIovGiHhVJ","executionInfo":{"status":"ok","timestamp":1738826228155,"user_tz":-330,"elapsed":806,"user":{"displayName":"Chandan Kumar","userId":"11565150763274034324"}},"outputId":"1b6a3d72-7feb-427b-f3ab-0f69856cec1f"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Gender     Attrition_Flag  Frequency\n","0      F  Attrited Customer        930\n","1      F  Existing Customer       4428\n","2      M  Attrited Customer        697\n","3      M  Existing Customer       4072"],"text/html":["\n","  <div id=\"df-8954273e-08fd-4e9e-b79c-9d36400007f7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Gender</th>\n","      <th>Attrition_Flag</th>\n","      <th>Frequency</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>F</td>\n","      <td>Attrited Customer</td>\n","      <td>930</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>F</td>\n","      <td>Existing Customer</td>\n","      <td>4428</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>M</td>\n","      <td>Attrited Customer</td>\n","      <td>697</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>M</td>\n","      <td>Existing Customer</td>\n","      <td>4072</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8954273e-08fd-4e9e-b79c-9d36400007f7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8954273e-08fd-4e9e-b79c-9d36400007f7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8954273e-08fd-4e9e-b79c-9d36400007f7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7960f77f-feb1-44d2-8890-6f8e80edcf0c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7960f77f-feb1-44d2-8890-6f8e80edcf0c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7960f77f-feb1-44d2-8890-6f8e80edcf0c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_0337e679-e5f4-4053-af3e-b2282d207f84\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('counts')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_0337e679-e5f4-4053-af3e-b2282d207f84 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('counts');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"counts","summary":"{\n  \"name\": \"counts\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"M\",\n          \"F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Attrition_Flag\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Existing Customer\",\n          \"Attrited Customer\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Frequency\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1991,\n        \"min\": 697,\n        \"max\": 4428,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          4428,\n          4072\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["plt.figure(figsize=(8, 6))\n","sns.set_style(\"darkgrid\")\n","\n","counts = df.groupby(['Gender', 'Attrition_Flag']).size().reset_index(name='Frequency')\n","\n","my_palette = sns.color_palette(\"pastel\", 5)\n","\n","sns.catplot(x='Gender', y='Frequency', hue='Attrition_Flag', data=counts, kind='bar', palette=my_palette, aspect=0.8)\n","plt.xlabel('Gender')\n","plt.ylabel('Frequency')\n","plt.title('Frequency of Attrition Flag for Each Gender')\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":546},"id":"JOPkgjpuH2Rw","executionInfo":{"status":"ok","timestamp":1738826339235,"user_tz":-330,"elapsed":578,"user":{"displayName":"Chandan Kumar","userId":"11565150763274034324"}},"outputId":"234feab3-d7ab-4599-f3f1-7c154d6b14a8"},"execution_count":43,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 0 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 576.75x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.figure(figsize=(12, 10))\n","\n","counts = df.groupby(['Marital_Status', 'Dependent_count']).size().reset_index(name='Frequency')\n","\n","my_palette = sns.color_palette(\"pastel\", 5)\n","\n","sns.set_style(\"darkgrid\")\n","\n","ax = sns.barplot(x='Dependent_count', y='Frequency', hue='Marital_Status', data=counts, palette=my_palette)\n","\n","for p in ax.patches:\n","    ax.annotate(format(p.get_height(), '.0f'),\n","                (p.get_x() + p.get_width() / 2., p.get_height()),\n","                ha = 'center', va = 'center',\n","                xytext = (0, 9),\n","                textcoords = 'offset points')\n","    plt.xlabel('Dependent Count')\n","plt.ylabel('Frequency')\n","plt.title('Frequency of Marital Status for Each Dependent Count')\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":872},"id":"sIWZeOx5IrsI","executionInfo":{"status":"ok","timestamp":1738826578015,"user_tz":-330,"elapsed":1165,"user":{"displayName":"Chandan Kumar","userId":"11565150763274034324"}},"outputId":"cff9d922-ed25-4bb0-c102-987c9f7f6c5d"},"execution_count":46,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x1000 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["counts = df.groupby(['Education_Level', 'Attrition_Flag']).size().reset_index(name='Frequency')\n","counts"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":488},"id":"ApVtbYlTJGls","executionInfo":{"status":"ok","timestamp":1738826611852,"user_tz":-330,"elapsed":443,"user":{"displayName":"Chandan Kumar","userId":"11565150763274034324"}},"outputId":"df473cff-88c1-404f-c8ac-528502e8f6cd"},"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Education_Level     Attrition_Flag  Frequency\n","0          College  Attrited Customer        154\n","1          College  Existing Customer        859\n","2        Doctorate  Attrited Customer         95\n","3        Doctorate  Existing Customer        356\n","4         Graduate  Attrited Customer        487\n","5         Graduate  Existing Customer       2641\n","6      High School  Attrited Customer        306\n","7      High School  Existing Customer       1707\n","8    Post-Graduate  Attrited Customer         92\n","9    Post-Graduate  Existing Customer        424\n","10      Uneducated  Attrited Customer        237\n","11      Uneducated  Existing Customer       1250\n","12         Unknown  Attrited Customer        256\n","13         Unknown  Existing Customer       1263"],"text/html":["\n","  <div id=\"df-82d6e593-2bcf-4867-8dd9-413fb8923970\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Education_Level</th>\n","      <th>Attrition_Flag</th>\n","      <th>Frequency</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>College</td>\n","      <td>Attrited Customer</td>\n","      <td>154</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>College</td>\n","      <td>Existing Customer</td>\n","      <td>859</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Doctorate</td>\n","      <td>Attrited Customer</td>\n","      <td>95</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Doctorate</td>\n","      <td>Existing Customer</td>\n","      <td>356</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Graduate</td>\n","      <td>Attrited Customer</td>\n","      <td>487</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Graduate</td>\n","      <td>Existing Customer</td>\n","      <td>2641</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>High School</td>\n","      <td>Attrited Customer</td>\n","      <td>306</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>High School</td>\n","      <td>Existing Customer</td>\n","      <td>1707</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Post-Graduate</td>\n","      <td>Attrited Customer</td>\n","      <td>92</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Post-Graduate</td>\n","      <td>Existing Customer</td>\n","      <td>424</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Uneducated</td>\n","      <td>Attrited Customer</td>\n","      <td>237</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Uneducated</td>\n","      <td>Existing Customer</td>\n","      <td>1250</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Unknown</td>\n","      <td>Attrited Customer</td>\n","      <td>256</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Unknown</td>\n","      <td>Existing Customer</td>\n","      <td>1263</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-82d6e593-2bcf-4867-8dd9-413fb8923970')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-82d6e593-2bcf-4867-8dd9-413fb8923970 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-82d6e593-2bcf-4867-8dd9-413fb8923970');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6ffdf36e-6cdb-4788-ad14-5f95cbab9e67\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6ffdf36e-6cdb-4788-ad14-5f95cbab9e67')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6ffdf36e-6cdb-4788-ad14-5f95cbab9e67 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_cc2dc837-905b-40d3-91ff-60d820419208\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('counts')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_cc2dc837-905b-40d3-91ff-60d820419208 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('counts');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"counts","summary":"{\n  \"name\": \"counts\",\n  \"rows\": 14,\n  \"fields\": [\n    {\n      \"column\": \"Education_Level\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"College\",\n          \"Doctorate\",\n          \"Uneducated\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Attrition_Flag\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Existing Customer\",\n          \"Attrited Customer\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Frequency\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 747,\n        \"min\": 92,\n        \"max\": 2641,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          424,\n          1250\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["import seaborn as sns\n","plt.figure(figsize=(12, 10))\n","sns.set_style(\"darkgrid\")\n","\n","counts = df.groupby(['Education_Level', 'Attrition_Flag']).size().reset_index(name='Frequency')\n","my_palette = sns.color_palette(\"pastel\", 5)\n","\n","sns.catplot(x='Education_Level', y='Frequency', hue='Attrition_Flag', data=counts, kind='bar', palette=my_palette, aspect=2)\n","plt.xlabel('Education_Level')\n","plt.ylabel('Frequency')\n","plt.title('Frequency of Attrition Flag for Each Education_Level')\n","\n","\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":545},"id":"AYWBAvrGJaSp","executionInfo":{"status":"ok","timestamp":1738826754545,"user_tz":-330,"elapsed":1065,"user":{"displayName":"Chandan Kumar","userId":"11565150763274034324"}},"outputId":"8f09d446-e6f9-4604-cb1c-4f8136ff6c7a"},"execution_count":49,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x1000 with 0 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1176.75x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}